#1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию
# type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
a = [1, 1.2, True, 'Мама мыла раму']
for el in a:
    print(type(el))
print('конец программы')
#2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами
# 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте. Для заполнения
# списка элементов необходимо использовать функцию input().
a = list(input('введите набор сиволов - '))
if len(a) % 2 == 0:
    i = 0  # делаем счетчик
    while i < (len(a)): # крутим цикл копа счетчик меньше длины списка
        a[i], a[i+1] = a[i+1], a[i] # меняем местами соседние элементы
        i += 2 # step 2 т.к. 2 мы уже обменяли
else:
    i = 0  # делаем счетчик
    while i < (len(a) - 1): # чтоб не трогался последний элемент
        i += 2
print (a)

#3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому
# времени года относится месяц (зима, весна, лето, осень). Напишите решения
# через list и через dict.
month = int(input('Введите месяц целым числом - '))
dict_month = {1:'Зима',2:'Зима',3:'Весна',4:'Весна',5:'Весна',6:'Лето',7:'Лето',8:'Лето',9:'Осень',10:'Осень',11:'Осень',12:'Зима'}
print(f'Это dict_month.get(month)')

m = int(input('Введите месяц целым чилом -'))
l_m = ['Зима','Всена','Лето','Осень']
if m == 12 or 1 or 2:
    print(f'Это {l_m[1]}')
if m == 3 or 4 or 5:
    print(f'Это {l_m[2]}')
if m == 6 or 7 or 8:
    print(f'Это {l_m[3]}')
if m == 9 or 10 or 11:
    print(f'Это {l_m[4]}')

#4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести
# каждое слово с новой строки. Строки необходимо пронумеровать. Если в слово
# длинное, выводить только первые 10 букв в слове.
my_str = input("Введите строку из нескольхик слов - ")
my_word = []
num = 1
for el in range(my_str.count(' ') + 1):
    my_word = my_str.split()
    if len(str(my_word)) <= 10:
        print(f" {num} {my_word [el]}")
        num += 1
    else:
        print(f" {num} {my_word [el] [0:10]}")
        num += 1
#5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий
# набор натуральных чисел. У пользователя необходимо запрашивать новый элемент
# рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то
# новый элемент с тем же значением должен разместиться после них.
number = int(input('Введите элемент "рейтинга": '))
my_list = [7, 5, 3, 3, 2]
c = my_list.count(number)
for element in my_list:
    if c > 0:
        i = my_list.index(number)
        my_list.insert(i+c, number)
        break
    else:
        if number > element:
            j = my_list.index(element)
            my_list.insert(j, number)
            break
        elif number < my_list[len(my_list) - 1]:
            my_list.append(number)
print(my_list)
